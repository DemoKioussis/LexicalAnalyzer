1	<prog> ::= <classDeclStar> <progBody>	E, W_CLASS
2	<classDeclStar> ::= <classDecl> <classDeclStar>	W_CLASS
3	<classDeclStar> ::= E	E
4	<classDecl> ::= <class> <id> <openCurly> <varDeclStar> <funcDefStar> <closeCurly> <semiCol>	W_CLASS
5	<varDeclStar> ::= <varDecl> <varDeclStar>	W_INT, EL_ID, W_FLOAT, EL_FLOAT
6	<varDeclStar> ::= E	E
7	<funcDefStar> ::= <funcDef> <funcDefStar>	W_INT, EL_ID, W_FLOAT, EL_FLOAT
8	<funcDefStar> ::= E	E
9	<progBody> ::= <program> <funcBody> <semiCol> <funcDefStar>	W_PROGRAM
10	<funcHead> ::= <type> <id> <openParen> <fParams> <closeParen>	W_INT, EL_ID, W_FLOAT, EL_FLOAT
11	<funcDef> ::= <funcHead> <funcBody> <semiCol>	W_INT, EL_ID, W_FLOAT, EL_FLOAT
12	<funcBody> ::= <openCurly> <varDeclStar> <statementStar> <closeCurly>	ORG_OPEN_CURLY
13	<statementStar> ::= <statement> <statementStar>	E, EL_ID, W_FOR, W_PUT, W_IF, W_RETURN, W_GET
14	<statementStar> ::= E	E
15	<varDecl> ::= <type> <id> <arraySizeStar> <semiCol>	W_INT, EL_ID, W_FLOAT, EL_FLOAT
16	<arraySizeStar> ::= <arraySize> <arraySizeStar>	ORG_OPEN_BRACKET
17	<arraySizeStar> ::= E	E
18	<statement> ::= <assignStat> <semiCol>	E, EL_ID
19	<statement> ::= <if> <openParen> <expr> <closeParen> <then> <statBlock> <else> <statBlock> <semiCol>	W_IF
20	<statement> ::= <for> <openParen> <type> <id> <assignOp> <expr> <semiCol> <relExpr> <semiCol> <assignStat> <closeParen> <statBlock> <semiCol>	W_FOR
21	<statement> ::= <get> <openParen> <variable> <closeParen> <semiCol>	W_GET
22	<statement> ::= <put> <openParen> <expr> <closeParen> <semiCol>	W_PUT
23	<statement> ::= <return> <openParen> <expr> <closeParen> <semiCol>	W_RETURN
24	<assignStat> ::= <variable> <assignOp> <expr>	E, EL_ID
25	<statBlock> ::= <openCurly> <statementStar> <closeCurly>	ORG_OPEN_CURLY
26	<statBlock> ::= <statement>	E, EL_ID, W_FOR, W_PUT, W_IF, W_RETURN, W_GET
27	<statBlock> ::= E	E
28	<expr> ::= <arithExpr>	E, EL_ID, EL_INTEGER, W_FLOAT, EL_FLOAT, OP_NOT, OP_PLUS, OP_MINUS, ORG_OPEN_PAREN
29	<expr> ::= <relExpr>	E, EL_ID, EL_INTEGER, W_FLOAT, EL_FLOAT, OP_NOT, OP_PLUS, OP_MINUS, ORG_OPEN_PAREN
30	<relExpr> ::= <arithExpr> <relOp> <arithExpr>	E, EL_ID, EL_INTEGER, W_FLOAT, EL_FLOAT, OP_NOT, OP_PLUS, OP_MINUS, ORG_OPEN_PAREN
31	<arithExpr> ::= <term> <arithExprPrime>	E, EL_ID, EL_INTEGER, W_FLOAT, EL_FLOAT, OP_NOT, OP_PLUS, OP_MINUS, ORG_OPEN_PAREN
32	<arithExprPrime> ::= <addOp> <term> <arithExprPrime>	OP_PLUS, OP_OR, OP_MINUS
33	<arithExprPrime> ::= E	E
34	<sign> ::= <plus>	OP_PLUS
35	<sign> ::= <minus>	OP_MINUS
36	<term> ::= <factor> <termPrime>	E, EL_ID, EL_INTEGER, W_FLOAT, EL_FLOAT, OP_NOT, OP_PLUS, OP_MINUS, ORG_OPEN_PAREN
37	<termPrime> ::= <multOp> <factor> <termPrime>	OP_MULTIPLY, OP_AND, OP_DIVIDE
38	<termPrime> ::= E	E
39	<factor> ::= <variable>	E, EL_ID
40	<factor> ::= <idnestStar> <id> <openParen> <aParams> <closeParen>	E, EL_ID
41	<factor> ::= <num>	EL_INTEGER, W_FLOAT, EL_FLOAT
42	<factor> ::= <openParen> <arithExpr> <closeParen>	ORG_OPEN_PAREN
43	<factor> ::= <not> <factor>	OP_NOT
44	<factor> ::= <sign> <factor>	OP_PLUS, OP_MINUS
45	<idnestStar> ::= <idnest> <idnestStar>	EL_ID
46	<idnestStar> ::= E	E
47	<variable> ::= <idnestStar> <id> <indiceStar>	E, EL_ID
48	<indiceStar> ::= <indice> <indiceStar>	ORG_OPEN_BRACKET
49	<indiceStar> ::= E	E
50	<idnest> ::= <id> <indiceStar> <dot>	EL_ID
51	<indice> ::= <openSquare> <arithExpr> <closeSquare>	ORG_OPEN_BRACKET
52	<arraySize> ::= <openSquare> <integer> <closeSquare>	ORG_OPEN_BRACKET
53	<type> ::= <int>	W_INT
54	<type> ::= <float>	W_FLOAT, EL_FLOAT
55	<type> ::= <id>	EL_ID
56	<fParams> ::= <type> <id> <arraySizeStar> <fParamsTailStar>	W_INT, EL_ID, W_FLOAT, EL_FLOAT
57	<fParams> ::= E	E
58	<fParamsTailStar> ::= <fParamsTail> <fParamsTailStar>	PUNCT_COMMA
59	<fParamsTailStar> ::= E	E
60	<aParams> ::= <expr> <aParamsTailStar>	E, EL_ID, EL_INTEGER, W_FLOAT, EL_FLOAT, OP_NOT, OP_PLUS, OP_MINUS, ORG_OPEN_PAREN
61	<aParams> ::= E	E
62	<aParamsTailStar> ::= <aParamsTail> <aParamsTailStar>	PUNCT_COMMA
63	<aParamsTailStar> ::= E	E
64	<fParamsTail> ::= <comma> <type> <id> <arraySizeStar>	PUNCT_COMMA
65	<aParamsTail> ::= <comma> <expr>	PUNCT_COMMA
66	<assignOp> ::= <assign>	OP_ASSIGN
67	<relOp> ::= <equal>	OP_EQUAL
68	<relOp> ::= <notEqual>	OP_NOT_EQUAL
69	<relOp> ::= <lessThan>	OP_L_THAN
70	<relOp> ::= <greaterThan>	OP_G_THAN
71	<relOp> ::= <lessThanOrEqual>	OP_L_THAN_OR_EQUAL
72	<relOp> ::= <greaterThanOrEqual>	OP_G_THAN_OR_EQUAL
73	<addOp> ::= <plus>	OP_PLUS
74	<addOp> ::= <minus>	OP_MINUS
75	<addOp> ::= <or>	OP_OR
76	<multOp> ::= <multiply>	OP_MULTIPLY
77	<multOp> ::= <divide>	OP_DIVIDE
78	<multOp> ::= <and>	OP_AND
79	<num> ::= <integer>	EL_INTEGER
80	<num> ::= <float>	W_FLOAT, EL_FLOAT
81	<openParen> ::= ORG_OPEN_PAREN	ORG_OPEN_PAREN
82	<closeParen> ::= ORG_CLOSE_PAREN	ORG_CLOSE_PAREN
83	<openCurly> ::= ORG_OPEN_CURLY	ORG_OPEN_CURLY
84	<closeCurly> ::= ORG_CLOSE_CURLY	ORG_CLOSE_CURLY
85	<openSquare> ::= ORG_OPEN_BRACKET	ORG_OPEN_BRACKET
86	<closeSquare> ::= ORG_CLOSE_BRACKET	ORG_CLOSE_BRACKET
87	<commentLine> ::= ORG_COMMENT_LINE	ORG_COMMENT_LINE
88	<openComment> ::= ORG_COMMENT_OPEN	ORG_COMMENT_OPEN
89	<closeComment> ::= ORG_COMMENT_CLOSE	ORG_COMMENT_CLOSE
90	<if> ::= W_IF	W_IF
91	<then> ::= W_THEN	W_THEN
92	<else> ::= W_ELSE	W_ELSE
93	<for> ::= W_FOR	W_FOR
94	<class> ::= W_CLASS	W_CLASS
95	<int> ::= W_INT	W_INT
96	<float> ::= W_FLOAT	W_FLOAT
97	<float> ::= EL_FLOAT	EL_FLOAT
98	<get> ::= W_GET	W_GET
99	<put> ::= W_PUT	W_PUT
100	<return> ::= W_RETURN	W_RETURN
101	<program> ::= W_PROGRAM	W_PROGRAM
102	<equal> ::= OP_EQUAL	OP_EQUAL
103	<notEqual> ::= OP_NOT_EQUAL	OP_NOT_EQUAL
104	<lessThan> ::= OP_L_THAN	OP_L_THAN
105	<greaterThan> ::= OP_G_THAN	OP_G_THAN
106	<lessThanOrEqual> ::= OP_L_THAN_OR_EQUAL	OP_L_THAN_OR_EQUAL
107	<greaterThanOrEqual> ::= OP_G_THAN_OR_EQUAL	OP_G_THAN_OR_EQUAL
108	<plus> ::= OP_PLUS	OP_PLUS
109	<minus> ::= OP_MINUS	OP_MINUS
110	<multiply> ::= OP_MULTIPLY	OP_MULTIPLY
111	<divide> ::= OP_DIVIDE	OP_DIVIDE
112	<assign> ::= OP_ASSIGN	OP_ASSIGN
113	<and> ::= OP_AND	OP_AND
114	<not> ::= OP_NOT	OP_NOT
115	<or> ::= OP_OR	OP_OR
116	<semiCol> ::= PUNCT_SEMICOL	PUNCT_SEMICOL
117	<comma> ::= PUNCT_COMMA	PUNCT_COMMA
118	<dot> ::= PUNCT_DOT	PUNCT_DOT
119	<integer> ::= EL_INTEGER	EL_INTEGER
120	<id> ::= EL_ID	EL_ID